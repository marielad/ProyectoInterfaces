package flappy.database;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

import org.hsqldb.Server;
import org.hsqldb.persist.HsqlProperties;
import org.hsqldb.server.ServerAcl.AclFormatException;

/**
 * Clase que configura la construcción de la base de datos embebida
 * @author Jorge Delgado, Mariela Dorta, Daniel Paredes
 *
 */
public class ScoreDB {

	Connection conn = null;
	Statement stmt;
	
	/**
	 * Constructor de la base de datos HSLQDB:
	 * Creamos una tabla con los campos Nombre y Puntos
	 */
	public ScoreDB() {

		HsqlProperties hsqlProperties = new HsqlProperties();
		hsqlProperties.setProperty("server.database.0",
		"db\\FlappyDB");

		hsqlProperties.setProperty("server.dbname.0", "mdb");
		Server server = new Server();
		
		try {
			server.setProperties(hsqlProperties);

		} catch (IOException | AclFormatException e) {
			e.printStackTrace();
		}
		
		server.setTrace(true);
		server.start();
		
		try {
			Class.forName("org.hsqldb.jdbc.JDBCDriver");
			conn = DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/mdb", "SA", "");

			stmt = conn.createStatement();
			stmt.executeQuery("CREATE TABLE IF NOT EXISTS Puntuaciones (\r\n" + 
					" IDJugador INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1),\r\n" + 
					" Nombre VARCHAR(10) NOT NULL, \r\n" + 
					" Puntos INTEGER NOT NULL,\r\n" + 
					" PRIMARY KEY (IDJugador)\r\n" + 
					");\r\n" + 
					"");
			stmt.close();
		} catch (SQLException e) {
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}

	}

	/**
	 * Recuperamos la conexión SQL
	 * @return conn
	 */
	public Connection getConexion() {
		return conn;
	}

	/**
	 * closeConexion() sirve para cerrar la conexion SQL
	 */
	public void closeConexion() {

		try {

			stmt = conn.createStatement();
			stmt.executeQuery("SHUTDOWN COMPACT");
			stmt.close();

			conn.close();

		} catch (SQLException e) {
			e.printStackTrace();
		}

	}

}
